{"version":3,"sources":["components/TopButtons.jsx","components/Inputs.jsx","services/weatherService.js","components/TimeAndLocation.jsx","components/TemperatureAndDetails.jsx","components/Forecast.jsx","App.js","index.js"],"names":["TopButtons","_ref","setQuery","react_default","a","createElement","className","id","title","map","city","key","onClick","q","Inputs","units","setUnits","_useState","useState","_useState2","Object","slicedToArray","setCity","handleUnitsChange","e","selectedUnit","currentTarget","name","value","onChange","type","placeholder","uil_search","size","uil_location_point","navigator","geolocation","toast","info","getCurrentPosition","position","success","lat","coords","latitude","lon","longitude","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getWeatherData","infoType","searchParams","url","URL","BASE_URL","search","URLSearchParams","objectSpread","appid","fetch","res","json","formatCurrentWeather","data","_data$coord","coord","_data$main","main","temp","feels_like","temp_min","temp_max","humidity","dt","_data$sys","sys","country","sunrise","sunset","weather","speed","wind","_weather$","details","icon","formatForecastWeather","timezone","daily","hourly","d","formatToLocalTime","day","secs","zone","format","arguments","DateTime","fromSeconds","setZone","toFormat","iconUrlFromCode","code","concat","getFormattedWeatherData","asyncToGenerator","_callee","formattedCurrentWeather","formattedForecastWeather","_context","exclude","_x","apply","TimeAndLocation","_ref$weather","TemperatureAndDetails","src","alt","toFixed","uil_temperature","uil_tear","uil_wind","uil_sun","uil_sunset","Forecast","items","console","log","item","index","App_regeneratorRuntime","App","query","_useState3","_useState4","_useState5","_useState6","setWeather","useEffect","message","fetchWeather","threshold","formatBackground","components_TopButtons","components_Inputs","components_TimeAndLocation","components_TemperatureAndDetails","components_Forecast","react_toastify_esm","autoClose","theme","newestOnTop","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"sPAyCeA,MAvCf,SAAmBC,GAAe,IAAZC,EAAQD,EAARC,SAwBpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAxBF,CACb,CACEC,GAAI,EACJC,MAAO,UAET,CACED,GAAI,EACJC,MAAO,UAET,CACED,GAAI,EACJC,MAAO,SAET,CACED,GAAI,EACJC,MAAO,WAET,CACED,GAAI,EACJC,MAAO,UAMCC,IAAI,SAACC,GAAI,OACfP,EAAAC,EAAAC,cAAA,UACEM,IAAKD,EAAKH,GACVD,UAAU,iCACVM,QAAS,kBAAMV,EAAS,CAAEW,EAAGH,EAAKF,UAEjCE,EAAKF,kCCyCDM,MAvEf,SAAeb,GAAgC,IAA7BC,EAAQD,EAARC,SAAUa,EAAKd,EAALc,MAAOC,EAAQf,EAARe,SAAQC,EACjBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BP,EAAIS,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAoB,SAACC,GACzB,IAAMC,EAAeD,EAAEE,cAAcC,KACjCZ,IAAUU,GAAcT,EAASS,IAuBvC,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,SACEuB,MAAOlB,EACPmB,SAAU,SAACL,GAAC,OAAKF,EAAQE,EAAEE,cAAcE,QACzCE,KAAK,OACLC,YAAY,sBACZzB,UAAU,gGAEZH,EAAAC,EAAAC,cAAC2B,EAAA,EAAS,CACRC,KAAM,GACN3B,UAAU,gEACVM,QAjCkB,WACX,KAATF,GAAaR,EAAS,CAAEW,EAAGH,OAkC3BP,EAAAC,EAAAC,cAAC6B,EAAA,EAAgB,CACfD,KAAM,GACN3B,UAAU,gEACVM,QAlCoB,WACtBuB,UAAUC,cACZC,IAAMC,KAAK,4BACXH,UAAUC,YAAYG,mBAAmB,SAACC,GACxCH,IAAMI,QAAQ,qBACd,IAAIC,EAAMF,EAASG,OAAOC,SACtBC,EAAML,EAASG,OAAOG,UAE1B5C,EAAS,CACPwC,MACAG,eA4BJ1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACbH,EAAAC,EAAAC,cAAA,UACEsB,KAAK,SACLrB,UAAU,oEACVM,QAASW,GAAkB,SAI7BpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAyB,KACtCH,EAAAC,EAAAC,cAAA,UACEsB,KAAK,WACLrB,UAAU,oEACVM,QAASW,GAAkB,iCCjErCwB,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAA7B,OAAA8B,UAAAC,EAAAF,EAAAG,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAnD,EAAAiB,GAAA,OAAAR,OAAA2C,eAAAD,EAAAnD,EAAA,CAAAiB,QAAAoC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAJ,EAAAnD,GAAA,IAAAkD,EAAA,aAAAM,GAAAN,EAAA,SAAAC,EAAAnD,EAAAiB,GAAA,OAAAkC,EAAAnD,GAAAiB,GAAA,SAAAwC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAApB,qBAAAwB,EAAAJ,EAAAI,EAAAC,EAAAvD,OAAAwD,OAAAH,EAAAvB,WAAA2B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAA/D,KAAA,IAAAkD,EAAAH,EAAAkB,KAAA,6BAAAF,EAAAX,MAAAM,EAAA,gBAAA5D,MAAAiE,EAAAX,IAAAa,KAAAlB,EAAAkB,MAAA,UAAAF,EAAA/D,OAAAkD,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAE,EAAAlC,EAAAoB,GAAA,WAAApD,KAAA,SAAAoD,IAAAc,EAAAC,KAAAnC,EAAAoB,IAAA,MAAAf,GAAA,OAAArC,KAAA,QAAAoD,IAAAf,IAAAnB,EAAAoB,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAwB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvC,EAAAuC,EAAA7C,EAAA,kBAAA8C,OAAA,IAAAC,EAAAlF,OAAAmF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAvD,GAAAE,EAAA8C,KAAAO,EAAAjD,KAAA6C,EAAAI,GAAA,IAAAE,EAAAP,EAAAjD,UAAAwB,EAAAxB,UAAA9B,OAAAwD,OAAAwB,GAAA,SAAAO,EAAAzD,GAAA,0BAAA0D,QAAA,SAAA3B,GAAApB,EAAAX,EAAA+B,EAAA,SAAAC,GAAA,OAAAmB,KAAAtB,QAAAE,EAAAC,OAAA,SAAA2B,EAAAlC,EAAAmC,GAAA,IAAAC,EAAAV,KAAAtB,QAAA,SAAAE,EAAAC,GAAA,SAAA8B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAlC,EAAAC,EAAA+B,EAAAC,GAAA,IAAArB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAA/D,KAAA,KAAAsF,EAAAvB,EAAAX,IAAAtD,EAAAwF,EAAAxF,MAAA,OAAAA,GAAA,iBAAAA,GAAAuB,EAAA8C,KAAArE,EAAA,WAAAkF,EAAAG,QAAArF,EAAAyF,SAAAC,KAAA,SAAA1F,GAAAuF,EAAA,OAAAvF,EAAAqF,EAAAC,IAAA,SAAA/C,GAAAgD,EAAA,QAAAhD,EAAA8C,EAAAC,KAAAJ,EAAAG,QAAArF,GAAA0F,KAAA,SAAAC,GAAAH,EAAAxF,MAAA2F,EAAAN,EAAAG,IAAA,SAAAI,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAArB,EAAAX,KAAAiC,CAAAlC,EAAAC,EAAA+B,EAAAC,KAAA,OAAAH,MAAAO,KAAAN,UAAA,SAAAzB,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA7B,SAAAqB,EAAAI,QAAA,QAAAwC,IAAAxC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA7B,SAAAkE,SAAA7C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAuC,EAAAlC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAyC,UAAA,yDAAAnC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA7B,SAAAqB,EAAAK,KAAA,aAAAW,EAAA/D,KAAA,OAAA+C,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAlD,EAAAuD,EAAAX,IAAA,OAAA5C,IAAAyD,MAAAlB,EAAAQ,EAAAuC,YAAAtF,EAAAV,MAAAiD,EAAAgD,KAAAxC,EAAAyC,QAAA,WAAAjD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAuC,GAAA5C,EAAAQ,SAAA,KAAAG,GAAAlD,GAAAuC,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAQ,SAAA,KAAAG,GAAA,SAAAuC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3B,KAAAiC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAApC,EAAAoC,EAAAQ,YAAA,GAAA5C,EAAA/D,KAAA,gBAAA+D,EAAAX,IAAA+C,EAAAQ,WAAA5C,EAAA,SAAAf,EAAAN,GAAA6B,KAAAiC,WAAA,EAAAJ,OAAA,SAAA1D,EAAAoC,QAAAmB,EAAA1B,WAAAqC,OAAA,YAAAjC,EAAAkC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3C,KAAA0C,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA3F,EAAA8C,KAAA0C,EAAAI,GAAA,OAAAlB,EAAAjG,MAAA+G,EAAAI,GAAAlB,EAAA9B,MAAA,EAAA8B,EAAA,OAAAA,EAAAjG,WAAA6F,EAAAI,EAAA9B,MAAA,EAAA8B,GAAA,OAAAA,UAAA,OAAAA,KAAAzC,GAAA,SAAAA,IAAA,OAAAxD,WAAA6F,EAAA1B,MAAA,UAAAG,EAAAhD,UAAAiD,EAAAtC,EAAA6C,EAAA,cAAAP,GAAAtC,EAAAsC,EAAA,cAAAD,KAAA8C,YAAAnF,EAAAsC,EAAAxC,EAAA,qBAAAX,EAAAiG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjD,GAAA,uBAAAiD,EAAAH,aAAAG,EAAAxH,QAAAqB,EAAAqG,KAAA,SAAAH,GAAA,OAAA9H,OAAAkI,eAAAlI,OAAAkI,eAAAJ,EAAA/C,IAAA+C,EAAAK,UAAApD,EAAAtC,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAhG,UAAA9B,OAAAwD,OAAA8B,GAAAwC,GAAAlG,EAAAwG,MAAA,SAAAtE,GAAA,OAAAmC,QAAAnC,IAAAyB,EAAAE,EAAA3D,WAAAW,EAAAgD,EAAA3D,UAAAO,EAAA,kBAAA4C,OAAArD,EAAA6D,gBAAA7D,EAAAyG,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAsC,QAAA,IAAAA,MAAA4C,SAAA,IAAAC,EAAA,IAAA9C,EAAAzC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAsC,GAAA,OAAA9D,EAAAiG,oBAAA3E,GAAAqF,IAAA9B,OAAAP,KAAA,SAAAF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAxF,MAAA+H,EAAA9B,UAAAlB,EAAAD,GAAA7C,EAAA6C,EAAA/C,EAAA,aAAAE,EAAA6C,EAAAnD,EAAA,kBAAA8C,OAAAxC,EAAA6C,EAAA,mDAAA1D,EAAA4G,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAAjJ,KAAAkJ,EAAAD,EAAArB,KAAA5H,GAAA,OAAAiJ,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAd,QAAA,KAAAnI,EAAAiJ,EAAAG,MAAA,GAAApJ,KAAAkJ,EAAA,OAAAhC,EAAAjG,MAAAjB,EAAAkH,EAAA9B,MAAA,EAAA8B,EAAA,OAAAA,EAAA9B,MAAA,EAAA8B,IAAA7E,EAAAyD,SAAA3B,EAAA5B,UAAA,CAAAkG,YAAAtE,EAAA4D,MAAA,SAAAsB,GAAA,GAAA3D,KAAA4D,KAAA,EAAA5D,KAAAwB,KAAA,EAAAxB,KAAAZ,KAAAY,KAAAX,WAAA+B,EAAApB,KAAAN,MAAA,EAAAM,KAAAhB,SAAA,KAAAgB,KAAApB,OAAA,OAAAoB,KAAAnB,SAAAuC,EAAApB,KAAAiC,WAAA1B,QAAA4B,IAAAwB,EAAA,QAAArI,KAAA0E,KAAA,MAAA1E,EAAAuI,OAAA,IAAA/G,EAAA8C,KAAAI,KAAA1E,KAAAkH,OAAAlH,EAAAwI,MAAA,MAAA9D,KAAA1E,QAAA8F,IAAA2C,KAAA,WAAA/D,KAAAN,MAAA,MAAAsE,EAAAhE,KAAAiC,WAAA,GAAAG,WAAA,aAAA4B,EAAAvI,KAAA,MAAAuI,EAAAnF,IAAA,OAAAmB,KAAAiE,MAAA3E,kBAAA,SAAA4E,GAAA,GAAAlE,KAAAN,KAAA,MAAAwE,EAAA,IAAA1F,EAAAwB,KAAA,SAAAmE,EAAAC,EAAAC,GAAA,OAAA7E,EAAA/D,KAAA,QAAA+D,EAAAX,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAuC,KAAAiD,EAAA,QAAA3B,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAAlD,EAAAoC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA7B,KAAA4D,KAAA,KAAAU,EAAAxH,EAAA8C,KAAAgC,EAAA,YAAA2C,EAAAzH,EAAA8C,KAAAgC,EAAA,iBAAA0C,GAAAC,EAAA,IAAAvE,KAAA4D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA9B,KAAA4D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAAtE,KAAA4D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAzF,MAAA,6CAAAkB,KAAA4D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAxC,OAAA,SAAA9D,EAAAoD,GAAA,QAAA6D,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAA,GAAAd,EAAAC,QAAA7B,KAAA4D,MAAA9G,EAAA8C,KAAAgC,EAAA,eAAA5B,KAAA4D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA/I,GAAA,aAAAA,IAAA+I,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAAhF,EAAAgF,IAAApC,WAAA,UAAA5C,EAAA/D,OAAA+D,EAAAX,MAAA2F,GAAAxE,KAAApB,OAAA,OAAAoB,KAAAwB,KAAAgD,EAAAzC,WAAA5C,GAAAa,KAAAyE,SAAAjF,IAAAiF,SAAA,SAAAjF,EAAAwC,GAAA,aAAAxC,EAAA/D,KAAA,MAAA+D,EAAAX,IAAA,gBAAAW,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAAuE,KAAAwB,KAAAhC,EAAAX,IAAA,WAAAW,EAAA/D,MAAAuE,KAAAiE,KAAAjE,KAAAnB,IAAAW,EAAAX,IAAAmB,KAAApB,OAAA,SAAAoB,KAAAwB,KAAA,kBAAAhC,EAAA/D,MAAAuG,IAAAhC,KAAAwB,KAAAQ,GAAA7C,GAAAuF,OAAA,SAAA3C,GAAA,QAAAW,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/B,KAAAyE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAzC,IAAAwF,MAAA,SAAA9C,GAAA,QAAAa,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAArC,EAAAoC,EAAAQ,WAAA,aAAA5C,EAAA/D,KAAA,KAAAmJ,EAAApF,EAAAX,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAA9F,MAAA,0BAAA+F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAzB,KAAAhB,SAAA,CAAA7B,SAAAiD,EAAAkC,GAAAf,aAAAE,WAAA,SAAAzB,KAAApB,SAAAoB,KAAAnB,SAAAuC,GAAAjC,IAAAxC,EACA,IAKMmI,EAAiB,SAACC,EAAUC,GAChC,IAAMC,EAAM,IAAIC,IAAIC,2CAAiBJ,GAGrC,OAFAE,EAAIG,OAAS,IAAIC,gBAAgBtK,OAAAuK,EAAA,EAAAvK,CAAA,GAAKiK,EAAY,CAAEO,MAPtC,sCASPC,MAAMP,GAAKhE,KAAK,SAACwE,GAAG,OAAKA,EAAIC,UAGhCC,EAAuB,SAACC,GAAS,IAAAC,EASjCD,EAPFE,MAASzJ,EAAGwJ,EAAHxJ,IAAKG,EAAGqJ,EAAHrJ,IAAGuJ,EAOfH,EANFI,KAAQC,EAAIF,EAAJE,KAAMC,EAAUH,EAAVG,WAAYC,EAAQJ,EAARI,SAAUC,EAAQL,EAARK,SAAUC,EAAQN,EAARM,SAC9C/K,EAKEsK,EALFtK,KACAgL,EAIEV,EAJFU,GAAEC,EAIAX,EAHFY,IAAOC,EAAOF,EAAPE,QAASC,EAAOH,EAAPG,QAASC,EAAMJ,EAANI,OACzBC,EAEEhB,EAFFgB,QACQC,EACNjB,EADFkB,KAAQD,MAAKE,EAGiBH,EAAQ,GAExC,MAAO,CACLvK,MACAG,MACAyJ,OACAC,aACAC,WACAC,WACAC,WACA/K,OACAgL,KACAG,UACAC,UACAC,SACAK,QAfmBD,EAAbf,KAgBNiB,KAhByBF,EAAJE,KAiBrBJ,UAIEK,EAAwB,SAACtB,GAAS,IAChCuB,EAA4BvB,EAA5BuB,SAAUC,EAAkBxB,EAAlBwB,MAAOC,EAAWzB,EAAXyB,OAiBvB,OAhBAD,EAAQA,EAAMtD,MAAM,EAAG,GAAG1J,IAAI,SAACkN,GAC7B,MAAO,CACLnN,MAAOoN,EAAkBD,EAAEhB,GAAIa,EAAU,OACzClB,KAAMqB,EAAErB,KAAKuB,IACbP,KAAMK,EAAEV,QAAQ,GAAGK,QAIvBI,EAASA,EAAOvD,MAAM,EAAG,GAAG1J,IAAI,SAACkN,GAC/B,MAAO,CACLnN,MAAOoN,EAAkBD,EAAEhB,GAAIa,EAAU,WACzClB,KAAMqB,EAAErB,KACRgB,KAAMK,EAAEV,QAAQ,GAAGK,QAIhB,CAAEE,WAAUC,QAAOC,WAqBtBE,EAAoB,SACxBE,EACAC,GAAI,IACJC,EAAMC,UAAAnF,OAAA,QAAArB,IAAAwG,UAAA,GAAAA,UAAA,GAAG,4CAA2C,OACjDC,WAASC,YAAYL,GAAMM,QAAQL,GAAMM,SAASL,IAEjDM,EAAkB,SAACC,GAAI,0CAAAC,OACSD,EAAI,YAE3BE,EA3Bc,eAAAxO,EAAAmB,OAAAsN,EAAA,EAAAtN,CAAA2B,IAAAsG,KAAG,SAAAsF,EAAOtD,GAAY,IAAAuD,EAAAlM,EAAAG,EAAAgM,EAAA,OAAA9L,IAAAqB,KAAA,SAAA0K,GAAA,cAAAA,EAAA7E,KAAA6E,EAAAjH,MAAA,cAAAiH,EAAAjH,KAAA,EACXsD,EACpC,UACAE,GACA/D,KAAK0E,GAAqB,OAEZ,OALV4C,EAAuBE,EAAArJ,KAKrB/C,EAAakM,EAAblM,IAAKG,EAAQ+L,EAAR/L,IAAGiM,EAAAjH,KAAA,EAEuBsD,EAAe,UAAW,CAC/DzI,MACAG,MACAkM,QAAS,0BACThO,MAAOsK,EAAatK,QACnBuG,KAAKiG,GAAsB,OALA,OAAxBsB,EAAwBC,EAAArJ,KAAAqJ,EAAAlJ,OAAA,SAAAxE,OAAAuK,EAAA,EAAAvK,CAAA,GAOlBwN,EAA4BC,IAAwB,wBAAAC,EAAA1E,SAAAuE,MACjE,gBAhB4BK,GAAA,OAAA/O,EAAAgP,MAAA5I,KAAA4H,YAAA,GChDdiB,MAhBf,SAAwBjP,GAA+C,IAAAkP,EAAAlP,EAA5CgN,QAAWN,EAAEwC,EAAFxC,GAAIa,EAAQ2B,EAAR3B,SAAU7L,EAAIwN,EAAJxN,KAAMmL,EAAOqC,EAAPrC,QACxD,OACE3M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCACVsN,EAAkBjB,EAAIa,KAI3BrN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAiC,GAAAkO,OAAK7M,EAAI,MAAA6M,OAAK1B,+CC4ErDsC,MA/Ef,SAA8BnP,GAc3B,IAAAkP,EAAAlP,EAbDgN,QACEI,EAAO8B,EAAP9B,QACAC,EAAI6B,EAAJ7B,KACAhB,EAAI6C,EAAJ7C,KACAE,EAAQ2C,EAAR3C,SACAC,EAAQ0C,EAAR1C,SACAM,EAAOoC,EAAPpC,QACAC,EAAMmC,EAANnC,OACAE,EAAKiC,EAALjC,MACAR,EAAQyC,EAARzC,SACAH,EAAU4C,EAAV5C,WACAiB,EAAQ2B,EAAR3B,SAGF,OACErN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACbH,EAAAC,EAAAC,cAAA,SAAIgN,IAGNlN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKgP,IAAKf,EAAgBhB,GAAOgC,IAAI,GAAGhP,UAAU,SAClDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAU,GAAAkO,OAAKlC,EAAKiD,UAAS,SAC1CpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAACmP,EAAA,EAAc,CAACvN,KAAM,GAAI3B,UAAU,SAAS,aAE7CH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAkB,GAAAkO,OAAKjC,EAAWgD,UAAS,UAE7DpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAACoP,EAAA,EAAO,CAACxN,KAAM,GAAI3B,UAAU,SAAS,YAEtCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAkB,GAAAkO,OAAK9B,EAAS6C,UAAS,OAE3DpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAACqP,EAAA,EAAO,CAACzN,KAAM,GAAI3B,UAAU,SAAS,QAEtCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAkB,GAAAkO,OAAKtB,EAAMqC,UAAS,aAK5DpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+EACbH,EAAAC,EAAAC,cAACsP,EAAA,EAAM,MACPxP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,QACjB,IACNH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACbsN,EAAkBb,EAASS,EAAU,aAG1CrN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,KAEzBH,EAAAC,EAAAC,cAACuP,EAAA,EAAS,MACVzP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,OAClB,IACLH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACbsN,EAAkBZ,EAAQQ,EAAU,aAGzCrN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,KAEzBH,EAAAC,EAAAC,cAACsP,EAAA,EAAM,MACPxP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,QACjB,IACNH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAkB,GAAAkO,OAAK/B,EAAS8C,UAAS,UAE3DpP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,KAEzBH,EAAAC,EAAAC,cAACsP,EAAA,EAAM,MACPxP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAY,OAClB,IACLH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAkB,GAAAkO,OAAKhC,EAAS+C,UAAS,aChCpDM,MA/Cf,SAAiB5P,GAAmB,IAAhBO,EAAKP,EAALO,MAAOsP,EAAK7P,EAAL6P,MAEzB,OADAC,QAAQC,IAAIF,GAEV3P,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAAoCE,IAEnDL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDAmBZwP,EAAMrP,IAAI,SAACwP,EAAMC,GAAK,OACrB/P,EAAAC,EAAAC,cAAA,OACEM,IAAKuP,EACL5P,UAAU,6CAEVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsB2P,EAAKzP,OACxCL,EAAAC,EAAAC,cAAA,OACEgP,IAAKf,EAAgB2B,EAAK3C,MAC1BhN,UAAU,YACVgP,IAAI,KAENnP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAa,GAAAkO,OAAKyB,EAAK3D,KAAKiD,UAAS,kCCzC9DY,EAAA,kBAAAnN,GAAA,IAAAA,EAAA,GAAAC,EAAA7B,OAAA8B,UAAAC,EAAAF,EAAAG,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAnD,EAAAiB,GAAA,OAAAR,OAAA2C,eAAAD,EAAAnD,EAAA,CAAAiB,QAAAoC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAJ,EAAAnD,GAAA,IAAAkD,EAAA,aAAAM,GAAAN,EAAA,SAAAC,EAAAnD,EAAAiB,GAAA,OAAAkC,EAAAnD,GAAAiB,GAAA,SAAAwC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAApB,qBAAAwB,EAAAJ,EAAAI,EAAAC,EAAAvD,OAAAwD,OAAAH,EAAAvB,WAAA2B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAA/D,KAAA,IAAAkD,EAAAH,EAAAkB,KAAA,6BAAAF,EAAAX,MAAAM,EAAA,gBAAA5D,MAAAiE,EAAAX,IAAAa,KAAAlB,EAAAkB,MAAA,UAAAF,EAAA/D,OAAAkD,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAE,EAAAlC,EAAAoB,GAAA,WAAApD,KAAA,SAAAoD,IAAAc,EAAAC,KAAAnC,EAAAoB,IAAA,MAAAf,GAAA,OAAArC,KAAA,QAAAoD,IAAAf,IAAAnB,EAAAoB,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAwB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAvC,EAAAuC,EAAA7C,EAAA,kBAAA8C,OAAA,IAAAC,EAAAlF,OAAAmF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAvD,GAAAE,EAAA8C,KAAAO,EAAAjD,KAAA6C,EAAAI,GAAA,IAAAE,EAAAP,EAAAjD,UAAAwB,EAAAxB,UAAA9B,OAAAwD,OAAAwB,GAAA,SAAAO,EAAAzD,GAAA,0BAAA0D,QAAA,SAAA3B,GAAApB,EAAAX,EAAA+B,EAAA,SAAAC,GAAA,OAAAmB,KAAAtB,QAAAE,EAAAC,OAAA,SAAA2B,EAAAlC,EAAAmC,GAAA,IAAAC,EAAAV,KAAAtB,QAAA,SAAAE,EAAAC,GAAA,SAAA8B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAlC,EAAAC,EAAA+B,EAAAC,GAAA,IAAArB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAA/D,KAAA,KAAAsF,EAAAvB,EAAAX,IAAAtD,EAAAwF,EAAAxF,MAAA,OAAAA,GAAA,iBAAAA,GAAAuB,EAAA8C,KAAArE,EAAA,WAAAkF,EAAAG,QAAArF,EAAAyF,SAAAC,KAAA,SAAA1F,GAAAuF,EAAA,OAAAvF,EAAAqF,EAAAC,IAAA,SAAA/C,GAAAgD,EAAA,QAAAhD,EAAA8C,EAAAC,KAAAJ,EAAAG,QAAArF,GAAA0F,KAAA,SAAAC,GAAAH,EAAAxF,MAAA2F,EAAAN,EAAAG,IAAA,SAAAI,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAArB,EAAAX,KAAAiC,CAAAlC,EAAAC,EAAA+B,EAAAC,KAAA,OAAAH,MAAAO,KAAAN,UAAA,SAAAzB,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA7B,SAAAqB,EAAAI,QAAA,QAAAwC,IAAAxC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA7B,SAAAkE,SAAA7C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAuC,EAAAlC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAyC,UAAA,yDAAAnC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA7B,SAAAqB,EAAAK,KAAA,aAAAW,EAAA/D,KAAA,OAAA+C,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAlD,EAAAuD,EAAAX,IAAA,OAAA5C,IAAAyD,MAAAlB,EAAAQ,EAAAuC,YAAAtF,EAAAV,MAAAiD,EAAAgD,KAAAxC,EAAAyC,QAAA,WAAAjD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAuC,GAAA5C,EAAAQ,SAAA,KAAAG,GAAAlD,GAAAuC,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAQ,SAAA,KAAAG,GAAA,SAAAuC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3B,KAAAiC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAApC,EAAAoC,EAAAQ,YAAA,GAAA5C,EAAA/D,KAAA,gBAAA+D,EAAAX,IAAA+C,EAAAQ,WAAA5C,EAAA,SAAAf,EAAAN,GAAA6B,KAAAiC,WAAA,EAAAJ,OAAA,SAAA1D,EAAAoC,QAAAmB,EAAA1B,WAAAqC,OAAA,YAAAjC,EAAAkC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3C,KAAA0C,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA3F,EAAA8C,KAAA0C,EAAAI,GAAA,OAAAlB,EAAAjG,MAAA+G,EAAAI,GAAAlB,EAAA9B,MAAA,EAAA8B,EAAA,OAAAA,EAAAjG,WAAA6F,EAAAI,EAAA9B,MAAA,EAAA8B,GAAA,OAAAA,UAAA,OAAAA,KAAAzC,GAAA,SAAAA,IAAA,OAAAxD,WAAA6F,EAAA1B,MAAA,UAAAG,EAAAhD,UAAAiD,EAAAtC,EAAA6C,EAAA,cAAAP,GAAAtC,EAAAsC,EAAA,cAAAD,KAAA8C,YAAAnF,EAAAsC,EAAAxC,EAAA,qBAAAX,EAAAiG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjD,GAAA,uBAAAiD,EAAAH,aAAAG,EAAAxH,QAAAqB,EAAAqG,KAAA,SAAAH,GAAA,OAAA9H,OAAAkI,eAAAlI,OAAAkI,eAAAJ,EAAA/C,IAAA+C,EAAAK,UAAApD,EAAAtC,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAhG,UAAA9B,OAAAwD,OAAA8B,GAAAwC,GAAAlG,EAAAwG,MAAA,SAAAtE,GAAA,OAAAmC,QAAAnC,IAAAyB,EAAAE,EAAA3D,WAAAW,EAAAgD,EAAA3D,UAAAO,EAAA,kBAAA4C,OAAArD,EAAA6D,gBAAA7D,EAAAyG,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAsC,QAAA,IAAAA,MAAA4C,SAAA,IAAAC,EAAA,IAAA9C,EAAAzC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAsC,GAAA,OAAA9D,EAAAiG,oBAAA3E,GAAAqF,IAAA9B,OAAAP,KAAA,SAAAF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAxF,MAAA+H,EAAA9B,UAAAlB,EAAAD,GAAA7C,EAAA6C,EAAA/C,EAAA,aAAAE,EAAA6C,EAAAnD,EAAA,kBAAA8C,OAAAxC,EAAA6C,EAAA,mDAAA1D,EAAA4G,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAAjJ,KAAAkJ,EAAAD,EAAArB,KAAA5H,GAAA,OAAAiJ,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAd,QAAA,KAAAnI,EAAAiJ,EAAAG,MAAA,GAAApJ,KAAAkJ,EAAA,OAAAhC,EAAAjG,MAAAjB,EAAAkH,EAAA9B,MAAA,EAAA8B,EAAA,OAAAA,EAAA9B,MAAA,EAAA8B,IAAA7E,EAAAyD,SAAA3B,EAAA5B,UAAA,CAAAkG,YAAAtE,EAAA4D,MAAA,SAAAsB,GAAA,GAAA3D,KAAA4D,KAAA,EAAA5D,KAAAwB,KAAA,EAAAxB,KAAAZ,KAAAY,KAAAX,WAAA+B,EAAApB,KAAAN,MAAA,EAAAM,KAAAhB,SAAA,KAAAgB,KAAApB,OAAA,OAAAoB,KAAAnB,SAAAuC,EAAApB,KAAAiC,WAAA1B,QAAA4B,IAAAwB,EAAA,QAAArI,KAAA0E,KAAA,MAAA1E,EAAAuI,OAAA,IAAA/G,EAAA8C,KAAAI,KAAA1E,KAAAkH,OAAAlH,EAAAwI,MAAA,MAAA9D,KAAA1E,QAAA8F,IAAA2C,KAAA,WAAA/D,KAAAN,MAAA,MAAAsE,EAAAhE,KAAAiC,WAAA,GAAAG,WAAA,aAAA4B,EAAAvI,KAAA,MAAAuI,EAAAnF,IAAA,OAAAmB,KAAAiE,MAAA3E,kBAAA,SAAA4E,GAAA,GAAAlE,KAAAN,KAAA,MAAAwE,EAAA,IAAA1F,EAAAwB,KAAA,SAAAmE,EAAAC,EAAAC,GAAA,OAAA7E,EAAA/D,KAAA,QAAA+D,EAAAX,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAuC,KAAAiD,EAAA,QAAA3B,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAAlD,EAAAoC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA7B,KAAA4D,KAAA,KAAAU,EAAAxH,EAAA8C,KAAAgC,EAAA,YAAA2C,EAAAzH,EAAA8C,KAAAgC,EAAA,iBAAA0C,GAAAC,EAAA,IAAAvE,KAAA4D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA9B,KAAA4D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAAtE,KAAA4D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAzF,MAAA,6CAAAkB,KAAA4D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAxC,OAAA,SAAA9D,EAAAoD,GAAA,QAAA6D,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAA,GAAAd,EAAAC,QAAA7B,KAAA4D,MAAA9G,EAAA8C,KAAAgC,EAAA,eAAA5B,KAAA4D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA/I,GAAA,aAAAA,IAAA+I,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAAhF,EAAAgF,IAAApC,WAAA,UAAA5C,EAAA/D,OAAA+D,EAAAX,MAAA2F,GAAAxE,KAAApB,OAAA,OAAAoB,KAAAwB,KAAAgD,EAAAzC,WAAA5C,GAAAa,KAAAyE,SAAAjF,IAAAiF,SAAA,SAAAjF,EAAAwC,GAAA,aAAAxC,EAAA/D,KAAA,MAAA+D,EAAAX,IAAA,gBAAAW,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAAuE,KAAAwB,KAAAhC,EAAAX,IAAA,WAAAW,EAAA/D,MAAAuE,KAAAiE,KAAAjE,KAAAnB,IAAAW,EAAAX,IAAAmB,KAAApB,OAAA,SAAAoB,KAAAwB,KAAA,kBAAAhC,EAAA/D,MAAAuG,IAAAhC,KAAAwB,KAAAQ,GAAA7C,GAAAuF,OAAA,SAAA3C,GAAA,QAAAW,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/B,KAAAyE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAzC,IAAAwF,MAAA,SAAA9C,GAAA,QAAAa,EAAA1C,KAAAiC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5B,KAAAiC,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAArC,EAAAoC,EAAAQ,WAAA,aAAA5C,EAAA/D,KAAA,KAAAmJ,EAAApF,EAAAX,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAA9F,MAAA,0BAAA+F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAzB,KAAAhB,SAAA,CAAA7B,SAAAiD,EAAAkC,GAAAf,aAAAE,WAAA,SAAAzB,KAAApB,SAAAoB,KAAAnB,SAAAuC,GAAAjC,IAAAxC,EAgEeoN,MArDf,WAAe,IAAAnP,EACaC,mBAAS,CAAEL,EAAG,WAAWM,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA5CoP,EAAKlP,EAAA,GAAEjB,EAAQiB,EAAA,GAAAmP,EACIpP,mBAAS,UAASqP,EAAAnP,OAAAC,EAAA,EAAAD,CAAAkP,EAAA,GAArCvP,EAAKwP,EAAA,GAAEvP,EAAQuP,EAAA,GAAAC,EACQtP,mBAAS,MAAKuP,EAAArP,OAAAC,EAAA,EAAAD,CAAAoP,EAAA,GAArCvD,EAAOwD,EAAA,GAAEC,EAAUD,EAAA,GA4B1B,OA1BAE,oBAAU,YACU,eAAA1Q,EAAAmB,OAAAsN,EAAA,EAAAtN,CAAA+O,IAAA9G,KAAG,SAAAsF,IAAA,IAAAiC,EAAA,OAAAT,IAAA/L,KAAA,SAAA0K,GAAA,cAAAA,EAAA7E,KAAA6E,EAAAjH,MAAA,OAG2B,OAFxC+I,EAAUP,EAAMxP,EAAIwP,EAAMxP,EAAI,oBAEpCwB,IAAMC,KAAK,wBAA0BsO,GAAS9B,EAAAjH,KAAA,EAExC4G,EAAwBrN,OAAAuK,EAAA,EAAAvK,CAAA,GAAKiP,EAAK,CAAEtP,WAASuG,KAAK,SAAC2E,GACvD5J,IAAMI,QAAO,oCAAA+L,OACyBvC,EAAKtK,KAAI,MAAA6M,OAAKvC,EAAKa,QAAO,MAGhE4D,EAAWzE,KACX,wBAAA6C,EAAA1E,SAAAuE,MACH,kBAZiB,OAAA1O,EAAAgP,MAAA5I,KAAA4H,YAAA,EAclB4C,IACC,CAACR,EAAOtP,IAWTZ,EAAAC,EAAAC,cAAA,OACEC,UAAS,8FAAAkO,OAVY,WACvB,IAAKvB,EAAS,MAAO,4BACrB,IAAM6D,EAAsB,WAAV/P,EAAqB,GAAK,GAC5C,OAAIkM,EAAQX,MAAQwE,EAAkB,4BAE/B,gCAKoGC,KAEzG5Q,EAAAC,EAAAC,cAAC2Q,EAAU,CAAC9Q,SAAUA,IACtBC,EAAAC,EAAAC,cAAC4Q,EAAM,CAAC/Q,SAAUA,EAAUa,MAAOA,EAAOC,SAAUA,IAEnDiM,GACC9M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6Q,EAAe,CAACjE,QAASA,IAC1B9M,EAAAC,EAAAC,cAAC8Q,EAAqB,CAAClE,QAASA,IAEhC9M,EAAAC,EAAAC,cAAC+Q,EAAQ,CAAC5Q,MAAM,kBAAkBsP,MAAO7C,EAAQS,SACjDvN,EAAAC,EAAAC,cAAC+Q,EAAQ,CAAC5Q,MAAM,iBAAiBsP,MAAO7C,EAAQQ,SAIpDtN,EAAAC,EAAAC,cAACgR,EAAA,EAAc,CAACC,UAAW,IAAMC,MAAM,UAAUC,aAAa,MCvDvDC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO1R,EAAAC,EAAAC,cAACyR,EAAG","file":"static/js/main.cfdf862c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TopButtons({ setQuery }) {\n  const cities = [\n    {\n      id: 1,\n      title: \"London\",\n    },\n    {\n      id: 2,\n      title: \"Sydney\",\n    },\n    {\n      id: 3,\n      title: \"Tokyo\",\n    },\n    {\n      id: 4,\n      title: \"Toronto\",\n    },\n    {\n      id: 5,\n      title: \"Paris\",\n    },\n  ];\n\n  return (\n    <div className=\"flex items-center justify-around my-6\">\n      {cities.map((city) => (\n        <button\n          key={city.id}\n          className=\"text-white text-lg font-medium\"\n          onClick={() => setQuery({ q: city.title })}\n        >\n          {city.title}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default TopButtons;\n","import React, { useState } from \"react\";\nimport { UilSearch, UilLocationPoint } from \"@iconscout/react-unicons\";\nimport { toast } from \"react-toastify\";\n\nfunction Inputs({ setQuery, units, setUnits }) {\n  const [city, setCity] = useState(\"\");\n\n  const handleUnitsChange = (e) => {\n    const selectedUnit = e.currentTarget.name;\n    if (units !== selectedUnit) setUnits(selectedUnit);\n  };\n\n  const handleSearchClick = () => {\n    if (city !== \"\") setQuery({ q: city });\n  };\n\n  const handleLocationClick = () => {\n    if (navigator.geolocation) {\n      toast.info(\"Fetching users location.\");\n      navigator.geolocation.getCurrentPosition((position) => {\n        toast.success(\"Location fetched!\");\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n\n        setQuery({\n          lat,\n          lon,\n        });\n      });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-row justify-center my-6\">\n      <div className=\"flex flex-row w-3/4 items-center justify-center space-x-4\">\n        <input\n          value={city}\n          onChange={(e) => setCity(e.currentTarget.value)}\n          type=\"text\"\n          placeholder=\"Search for city....\"\n          className=\"text-xl font-light p-2 w-full shadow-xl focus:outline-none capitalize placeholder:lowercase\"\n        />\n        <UilSearch\n          size={25}\n          className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n          onClick={handleSearchClick}\n        />\n        <UilLocationPoint\n          size={25}\n          className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n          onClick={handleLocationClick}\n        />\n      </div>\n\n      <div className=\"flex flex-row w-1/4 items-center justify-center\">\n        <button\n          name=\"metric\"\n          className=\"text-xl text-white font-light transition ease-out hover:scale-125\"\n          onClick={handleUnitsChange}\n        >\n          °C\n        </button>\n        <p className=\"text-xl text-white mx-1\">|</p>\n        <button\n          name=\"imperial\"\n          className=\"text-xl text-white font-light transition ease-out hover:scale-125\"\n          onClick={handleUnitsChange}\n        >\n          °F\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Inputs;\n","import { DateTime } from \"luxon\";\n\nconst API_KEY = \"45b01a7f6a9893cc9370a6fd91f105fb\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\n// https://api.openweathermap.org/data/2.5/onecall?lat=48.8534&lon=2.3488&exclude=current,minutely,hourly,alerts&appid=1fa9ff4126d95b8db54f3897a208e91c&units=metric\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + \"/\" + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n  return fetch(url).then((res) => res.json());\n};\n\nconst formatCurrentWeather = (data) => {\n  const {\n    coord: { lat, lon },\n    main: { temp, feels_like, temp_min, temp_max, humidity },\n    name,\n    dt,\n    sys: { country, sunrise, sunset },\n    weather,\n    wind: { speed },\n  } = data;\n\n  const { main: details, icon } = weather[0];\n\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed,\n  };\n};\n\nconst formatForecastWeather = (data) => {\n  let { timezone, daily, hourly } = data;\n  daily = daily.slice(1, 6).map((d) => {\n    return {\n      title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n      temp: d.temp.day,\n      icon: d.weather[0].icon,\n    };\n  });\n\n  hourly = hourly.slice(1, 6).map((d) => {\n    return {\n      title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n      temp: d.temp,\n      icon: d.weather[0].icon,\n    };\n  });\n\n  return { timezone, daily, hourly };\n};\n\nconst getFormattedWeatherData = async (searchParams) => {\n  const formattedCurrentWeather = await getWeatherData(\n    \"weather\",\n    searchParams\n  ).then(formatCurrentWeather);\n\n  const { lat, lon } = formattedCurrentWeather;\n\n  const formattedForecastWeather = await getWeatherData(\"onecall\", {\n    lat,\n    lon,\n    exclude: \"current,minutely,alerts\",\n    units: searchParams.units,\n  }).then(formatForecastWeather);\n\n  return { ...formattedCurrentWeather, ...formattedForecastWeather };\n};\n\nconst formatToLocalTime = (\n  secs,\n  zone,\n  format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst iconUrlFromCode = (code) =>\n  `http://openweathermap.org/img/wn/${code}@2x.png`;\n\nexport default getFormattedWeatherData;\n\nexport { formatToLocalTime, iconUrlFromCode };\n","import React from \"react\";\nimport { formatToLocalTime } from \"../services/weatherService\";\n\nfunction TimeAndLocation({ weather: { dt, timezone, name, country } }) {\n  return (\n    <div>\n      <div className=\"flex items-center justify-center my-6\">\n        <p className=\"text-white text-xl font-extralight\">\n          {formatToLocalTime(dt, timezone)}\n        </p>\n      </div>\n\n      <div className=\"flex items-center justify-center my-3\">\n        <p className=\"text-white text-3xl font-medium\">{`${name}, ${country}`}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeAndLocation;\n","import React from \"react\";\nimport {\n  UilTemperature,\n  UilTear,\n  UilWind,\n  UilSun,\n  UilSunset,\n} from \"@iconscout/react-unicons\";\nimport { formatToLocalTime, iconUrlFromCode } from \"../services/weatherService\";\n\nfunction TemperatureAndDetails({\n  weather: {\n    details,\n    icon,\n    temp,\n    temp_min,\n    temp_max,\n    sunrise,\n    sunset,\n    speed,\n    humidity,\n    feels_like,\n    timezone,\n  },\n}) {\n  return (\n    <div>\n      <div className=\"flex items-center justify-center py-6 text-xl text-cyan-300\">\n        <p>{details}</p>\n      </div>\n\n      <div className=\"flex flex-row items-center justify-between text-white py-3\">\n        <img src={iconUrlFromCode(icon)} alt=\"\" className=\"w-20\" />\n        <p className=\"text-5xl\">{`${temp.toFixed()}°`}</p>\n        <div className=\"flex flex-col space-y-2\">\n          <div className=\"flex font-light text-sm items-center justify-center\">\n            <UilTemperature size={18} className=\"mr-1\" />\n            Real fell:\n            <span className=\"font-medium ml-1\">{`${feels_like.toFixed()}°`}</span>\n          </div>\n          <div className=\"flex font-light text-sm items-center justify-center\">\n            <UilTear size={18} className=\"mr-1\" />\n            Humidity:\n            <span className=\"font-medium ml-1\">{`${humidity.toFixed()}%`}</span>\n          </div>\n          <div className=\"flex font-light text-sm items-center justify-center\">\n            <UilWind size={18} className=\"mr-1\" />\n            Wind:\n            <span className=\"font-medium ml-1\">{`${speed.toFixed()} km/h`}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row items-center justify-center space-x-2 text-white text-sm py-3\">\n        <UilSun />\n        <p className=\"font-light\">\n          Rise:{\" \"}\n          <span className=\"font-medium ml-1\">\n            {formatToLocalTime(sunrise, timezone, \"hh:mm a\")}\n          </span>\n        </p>\n        <p className=\"font-light\">|</p>\n\n        <UilSunset />\n        <p className=\"font-light\">\n          Set:{\" \"}\n          <span className=\"font-medium ml-1\">\n            {formatToLocalTime(sunset, timezone, \"hh:mm a\")}\n          </span>\n        </p>\n        <p className=\"font-light\">|</p>\n\n        <UilSun />\n        <p className=\"font-light\">\n          High:{\" \"}\n          <span className=\"font-medium ml-1\">{`${temp_max.toFixed()}°`}</span>\n        </p>\n        <p className=\"font-light\">|</p>\n\n        <UilSun />\n        <p className=\"font-light\">\n          Low:{\" \"}\n          <span className=\"font-medium ml-1\">{`${temp_min.toFixed()}°`}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default TemperatureAndDetails;\n","import React from \"react\";\nimport { iconUrlFromCode } from \"../services/weatherService\";\n\nfunction Forecast({ title, items }) {\n  console.log(items);\n  return (\n    <div>\n      <div className=\"flex items-center justify-start mt-6\">\n        <p className=\"text-white font-medium uppercase\">{title}</p>\n      </div>\n      <hr className=\"my-2\" />\n\n      <div className=\"flex flex-row items-center justify-between text-white\">\n        {/* this commented code is what I teach during the video\n        it has missing key and will show error in browser console\n        so use the code below\n        what I have done is just added index to loop and\n        key attribute to the div element */}\n\n        {/* {items.map((item) => (\n          <div className=\"flex flex-col items-center justify-center\">\n            <p className=\"font-light text-sm\">{item.title}</p>\n            <img\n              src={iconUrlFromCode(item.icon)}\n              className=\"w-12 my-1\"\n              alt=\"\"\n            />\n            <p className=\"font-medium\">{`${item.temp.toFixed()}°`}</p>\n          </div>\n        ))} */}\n\n        {items.map((item, index) => (\n          <div\n            key={index}\n            className=\"flex flex-col items-center justify-center\"\n          >\n            <p className=\"font-light text-sm\">{item.title}</p>\n            <img\n              src={iconUrlFromCode(item.icon)}\n              className=\"w-12 my-1\"\n              alt=\"\"\n            />\n            <p className=\"font-medium\">{`${item.temp.toFixed()}°`}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Forecast;\n","import React from 'react';\nimport \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n\n      toast.info(\"Fetching weather for \" + message);\n\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        toast.success(\n          `Successfully fetched weather for ${data.name}, ${data.country}.`\n        );\n\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  return (\n    <div\n      className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}